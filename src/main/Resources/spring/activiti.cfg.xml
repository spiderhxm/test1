<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context
       					http://www.springframework.org/schema/context/spring-context-3.2.xsd"
>
    <context:property-placeholder location="classpath*:properties/mysql.properties" ignore-unresolvable="true"/>


    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" >
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="activitiDataSource"/>
        <property name="transactionManager" ref="activitiTransactionManager"/>
        <property name="databaseSchemaUpdate" value="true"/>

        <property name="jobExecutorActivate" value="false"/>
        <property name="history" value="none"/>
<!--        <property name="idGenerator" ref="idGeneratorFraudmetrix" />-->
<!--        <property name="typedEventListeners" >
            <map>
                <entry key="TASK_CREATED" >
                    <list>
                        <ref local="getNextTaskEventListener" />
                    </list>
                </entry>
                <entry key="PROCESS_COMPLETED" >
                    <list>
                        <ref local="closedEventListener" />
                    </list>
                </entry>
            </map>
        </property>-->
    </bean>

    <!--事务管理器 -->
    <bean id="activitiTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="activitiDataSource"/>
    </bean>

    <bean id="activitiDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${activiti.url}"/>
        <property name="username" value="${activiti.name}"/>
        <property name="password" value="${activiti.password}"/>
        <property name="defaultAutoCommit" value="true"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="${druid.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>


    </bean>

    <bean id="repositoryService" factory-method="getRepositoryService" factory-bean="processEngine"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />

</beans>